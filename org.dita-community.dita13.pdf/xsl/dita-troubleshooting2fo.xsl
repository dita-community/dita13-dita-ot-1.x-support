<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0"
  xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <!--  FO output support for the DITA 1.3 Troubleshooting topic type and troubleshooting
       domain.
   -->

  <!-- *** Templates for troubleshooting topic *** -->

  <!-- No autogenerated title for steps when it's a child of remedy -->
  <xsl:template match="*[contains(@class, ' troubleshooting/remedy ')]/*[contains(@class, ' task/steps ')]">
    <fo:list-block xsl:use-attribute-sets="steps">
      <xsl:call-template name="commonattributes"/>
      <xsl:apply-templates/>
    </fo:list-block>
  </xsl:template>

  <!-- No autogenerated title for steps-unodered when it's a child of remedy -->
  <xsl:template match="*[contains(@class, ' troubleshooting/remedy ')]/*[contains(@class, ' task/steps-unordered ')]">
    <fo:list-block xsl:use-attribute-sets="steps-unordered">
      <xsl:call-template name="commonattributes"/>
      <xsl:apply-templates/>
    </fo:list-block>
  </xsl:template>

  <!-- *** Templates for trouble note type *** -->

  <!-- Override the placeNoteContent mode found in org.dita.pdf2/xsl/fo/commons.xsl.
       This override does three things: 1) Adds label support for type="trouble" 
       2) Suppresses the default #note-separator character (: in English)
       3) Allows steptroubleshooting and tasktroubleshooting to be rendered as
       if they were note type="trouble"
       
       Beware that if you integrate the org.dita-community.dita13.pdf plugin
       with your own customization, and that customization overrides placeNoteContent,
       you will need to merge the changes here into your version of placeNoteContent.
       This is true because of XSLT template precedence rules.       
  -->
  <xsl:template match="*" mode="placeNoteContent">
    <fo:block xsl:use-attribute-sets="note">
      <xsl:call-template name="commonattributes"/>
      <fo:inline xsl:use-attribute-sets="note__label">
        <xsl:choose>
          <!-- org.dita-community: Added this xsl:when to support troubleshooting -->
          <xsl:when
            test="
              @type = 'trouble'
              or contains(@class, ' task/steptroubleshooting ')
              or contains(@class, ' task/tasktroubleshooting ')">
            <fo:inline xsl:use-attribute-sets="note__label__notice">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Trouble'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'note' or not(@type)">
            <fo:inline xsl:use-attribute-sets="note__label__note">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Note'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'notice'">
            <fo:inline xsl:use-attribute-sets="note__label__notice">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Notice'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'tip'">
            <fo:inline xsl:use-attribute-sets="note__label__tip">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Tip'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'fastpath'">
            <fo:inline xsl:use-attribute-sets="note__label__fastpath">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Fastpath'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'restriction'">
            <fo:inline xsl:use-attribute-sets="note__label__restriction">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Restriction'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'important'">
            <fo:inline xsl:use-attribute-sets="note__label__important">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Important'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'remember'">
            <fo:inline xsl:use-attribute-sets="note__label__remember">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Remember'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'attention'">
            <fo:inline xsl:use-attribute-sets="note__label__attention">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Attention'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'caution'">
            <fo:inline xsl:use-attribute-sets="note__label__caution">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Caution'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'danger'">
            <fo:inline xsl:use-attribute-sets="note__label__danger">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Danger'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'warning'">
            <fo:inline xsl:use-attribute-sets="note__label__danger">
              <xsl:call-template name="insertVariable">
                <xsl:with-param name="theVariableID" select="'Warning'"/>
              </xsl:call-template>
            </fo:inline>
          </xsl:when>
          <xsl:when test="@type = 'other'">
            <fo:inline xsl:use-attribute-sets="note__label__other">
              <xsl:choose>
                <xsl:when test="@othertype">
                  <xsl:value-of select="@othertype"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>[</xsl:text>
                  <xsl:value-of select="@type"/>
                  <xsl:text>]</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </fo:inline>
          </xsl:when>
        </xsl:choose>
        <!-- org.dita-community: Made the call for the #note-separator variable
             conditional by wrapping the insertVariable call inside or xsl:if.
             This was done to suppress the #note-separator when the outputting
             "trouble"
        -->
        <xsl:if
          test="
            not(@type = 'trouble'
            or contains(@class, ' task/steptroubleshooting ')
            or contains(@class, ' task/tasktroubleshooting '))">
          <xsl:call-template name="insertVariable">
            <xsl:with-param name="theVariableID" select="'#note-separator'"/>
          </xsl:call-template>
        </xsl:if>
      </fo:inline>
      <xsl:text>  </xsl:text>
      <xsl:apply-templates/>
    </fo:block>
  </xsl:template>

<!-- *** Template for task-related troubleshooting *** -->
  
  <!-- This template renders tasktroubleshooting and steptroubleshooting
       as if they were note type="trouble".
  -->  
  <xsl:template
    match="*[contains(@class, ' task/steptroubleshooting ')
    or contains(@class, ' task/tasktroubleshooting ')]" priority="5">    
    <xsl:variable name="noteImagePath">
      <xsl:call-template name="insertVariable">
        <xsl:with-param name="theVariableID" select="'trouble Note Image Path'"/>
      </xsl:call-template>
    </xsl:variable>
    <fo:table xsl:use-attribute-sets="note__table">
      <fo:table-column xsl:use-attribute-sets="note__image__column"/>
      <fo:table-column xsl:use-attribute-sets="note__text__column"/>
      <fo:table-body>
        <fo:table-row>
          <fo:table-cell xsl:use-attribute-sets="note__image__entry">
            <fo:block>
              <fo:external-graphic src="url({concat($artworkPrefix, $noteImagePath)})"
                xsl:use-attribute-sets="image"/>
            </fo:block>
          </fo:table-cell>
          <fo:table-cell xsl:use-attribute-sets="note__text__entry">
            <xsl:apply-templates select="." mode="placeNoteContent"/>
          </fo:table-cell>
        </fo:table-row>
      </fo:table-body>
    </fo:table>
  </xsl:template>

<!-- *** Template to suppress responsibleParty *** -->  
  <xsl:template match="*[contains(@class,' troubleshooting/responsibleParty ')]" priority="1">
    <!-- suppress it -->
  </xsl:template>

</xsl:stylesheet>
